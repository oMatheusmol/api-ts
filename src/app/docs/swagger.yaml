openapi: 3.0.3
info:
  title: API Typescript
  description: API Typescript
  version: 1.0.0
  termsOfService: http://localhost
  contact:
    name: Matheus Mol
    email: matheusmol@hotmail.com
  license:
    name: 'ISC'
    url: http://localhost
servers:
  - url: http://localhost:7000
    description: Development Server
tags:
  - name: Auth
    description: 'Token'
  - name: User
    description: 'Users Data'

paths:
  # Auth #
  /login:
    post:
      tags:
        - Auth
      summary: Obtem um token de acesso
      operationId: accessToken
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/authResponse'
        400:
          $ref: '#/components/responses/badRequestResponse'
        401:
          $ref: '#/components/responses/unauthorizedResponse'
        500:
          $ref: '#/components/responses/internalServerErrorResponse'
  /login/refresh-token:
    post:
      tags:
        - Auth
      summary: Atualiza o token de acesso
      operationId: refreshToken
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/authResponse'
        400:
          $ref: '#/components/responses/badRequestResponse'
        401:
          $ref: '#/components/responses/unauthorizedResponse'
        500:
          $ref: '#/components/responses/internalServerErrorResponse'
  /user:
    get:
      tags:
        - User
      summary: Recupera dados de um usu√°rio
      operationId: getUsuario
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/user'
        400:
          $ref: '#/components/responses/badRequestResponse'
        401:
          $ref: '#/components/responses/unauthorizedResponse'
        500:
          $ref: '#/components/responses/internalServerErrorResponse'
 
components:
  responses:
    badRequestResponse:
      description: BAD_REQUEST
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/errorResponse'
    unauthorizedResponse:
      description: UNAUTHORIZED
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/errorResponse'
    internalServerErrorResponse:
      description: INTERNAL_SERVER_ERROR
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/errorResponse'
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key
  schemas:
    errorResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            code:
              type: integer
            message:
              type: string
            status:
              type: string
    apiResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            message:
              type: string
    postResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              type: string
            message:
              type: string
    authResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            user:
              type: string
            token:
              type: string
    user:
      type: 'object'
      properties:
        userID:
          type: 'number'
        name:
          type: 'string'
        email:
          type: 'string'
        username:
          type: 'string'
        password:
          type: 'string'

  requestBodies:
    usuarioBody:
      description: A JSON object containing user information
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              nome:
                type: string
              email:
                type: string
              empresaId:
                type: string
